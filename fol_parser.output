State 21 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | line

    3 line: '\n'
    4     | formula '\n'

    5 literal: VARIABLE '-' '>' VARIABLE
    6        | VARIABLE '=' '=' VARIABLE
    7        | VARIABLE '!' '=' VARIABLE
    8        | '~' literal
    9        | '(' literal ')'

   10 quantifier: 'A' VARIABLE
   11           | 'E' VARIABLE
   12           | '~' quantifier

   13 quantifier_list: quantifier
   14                | quantifier quantifier_list

   15 conjunction: literal
   16            | literal '&' conjunction
   17            | '(' conjunction ')'
   18            | quantifier_list '(' conjunction ')'

   19 disjunct: conjunction
   20         | conjunction '|' disjunct

   21 formula: disjunct
   22        | quantifier_list '(' formula ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4
'!' (33) 7
'&' (38) 16
'(' (40) 9 17 18 22
')' (41) 9 17 18 22
'-' (45) 5
'=' (61) 6 7
'>' (62) 5
'A' (65) 10
'E' (69) 11
'|' (124) 20
'~' (126) 8 12
error (256)
VARIABLE (258) 5 6 7 10 11


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
input (17)
    on left: 1 2, on right: 0
line (18)
    on left: 3 4, on right: 2
literal (19)
    on left: 5 6 7 8 9, on right: 8 9 15 16
quantifier (20)
    on left: 10 11 12, on right: 12 13 14
quantifier_list (21)
    on left: 13 14, on right: 14 18 22
conjunction (22)
    on left: 15 16 17 18, on right: 16 17 18 19 20
disjunct (23)
    on left: 19 20, on right: 20 21
formula (24)
    on left: 21 22, on right: 4 22


state 0

    0 $accept: . input $end

    VARIABLE  shift, and go to state 1
    '\n'      shift, and go to state 2
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    $default  reduce using rule 1 (input)

    input            go to state 7
    line             go to state 8
    literal          go to state 9
    quantifier       go to state 10
    quantifier_list  go to state 11
    conjunction      go to state 12
    disjunct         go to state 13
    formula          go to state 14


state 1

    5 literal: VARIABLE . '-' '>' VARIABLE
    6        | VARIABLE . '=' '=' VARIABLE
    7        | VARIABLE . '!' '=' VARIABLE

    '-'  shift, and go to state 15
    '='  shift, and go to state 16
    '!'  shift, and go to state 17


state 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


state 3

    8 literal: '~' . literal
   12 quantifier: '~' . quantifier

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 18
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal     go to state 19
    quantifier  go to state 20


state 4

    9 literal: '(' . literal ')'
   17 conjunction: '(' . conjunction ')'

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal          go to state 21
    quantifier       go to state 10
    quantifier_list  go to state 22
    conjunction      go to state 23


state 5

   10 quantifier: 'A' . VARIABLE

    VARIABLE  shift, and go to state 24


state 6

   11 quantifier: 'E' . VARIABLE

    VARIABLE  shift, and go to state 25


state 7

    0 $accept: input . $end

    $end  shift, and go to state 26


state 8

    2 input: line .

    $default  reduce using rule 2 (input)


state 9

   15 conjunction: literal .
   16            | literal . '&' conjunction

    '&'  shift, and go to state 27

    $default  reduce using rule 15 (conjunction)


state 10

   13 quantifier_list: quantifier .
   14                | quantifier . quantifier_list

    '~'  shift, and go to state 28
    'A'  shift, and go to state 5
    'E'  shift, and go to state 6

    $default  reduce using rule 13 (quantifier_list)

    quantifier       go to state 10
    quantifier_list  go to state 29


state 11

   18 conjunction: quantifier_list . '(' conjunction ')'
   22 formula: quantifier_list . '(' formula ')'

    '('  shift, and go to state 30


state 12

   19 disjunct: conjunction .
   20         | conjunction . '|' disjunct

    '|'  shift, and go to state 31

    $default  reduce using rule 19 (disjunct)


state 13

   21 formula: disjunct .

    $default  reduce using rule 21 (formula)


state 14

    4 line: formula . '\n'

    '\n'  shift, and go to state 32


state 15

    5 literal: VARIABLE '-' . '>' VARIABLE

    '>'  shift, and go to state 33


state 16

    6 literal: VARIABLE '=' . '=' VARIABLE

    '='  shift, and go to state 34


state 17

    7 literal: VARIABLE '!' . '=' VARIABLE

    '='  shift, and go to state 35


state 18

    9 literal: '(' . literal ')'

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 36
    '('       shift, and go to state 18

    literal  go to state 37


state 19

    8 literal: '~' literal .

    $default  reduce using rule 8 (literal)


state 20

   12 quantifier: '~' quantifier .

    $default  reduce using rule 12 (quantifier)


state 21

    9 literal: '(' literal . ')'
   15 conjunction: literal .
   16            | literal . '&' conjunction

    ')'  shift, and go to state 38
    '&'  shift, and go to state 27

    ')'  [reduce using rule 15 (conjunction)]


state 22

   18 conjunction: quantifier_list . '(' conjunction ')'

    '('  shift, and go to state 39


state 23

   17 conjunction: '(' conjunction . ')'

    ')'  shift, and go to state 40


state 24

   10 quantifier: 'A' VARIABLE .

    $default  reduce using rule 10 (quantifier)


state 25

   11 quantifier: 'E' VARIABLE .

    $default  reduce using rule 11 (quantifier)


state 26

    0 $accept: input $end .

    $default  accept


state 27

   16 conjunction: literal '&' . conjunction

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal          go to state 9
    quantifier       go to state 10
    quantifier_list  go to state 22
    conjunction      go to state 41


state 28

   12 quantifier: '~' . quantifier

    '~'  shift, and go to state 28
    'A'  shift, and go to state 5
    'E'  shift, and go to state 6

    quantifier  go to state 20


state 29

   14 quantifier_list: quantifier quantifier_list .

    $default  reduce using rule 14 (quantifier_list)


state 30

   18 conjunction: quantifier_list '(' . conjunction ')'
   22 formula: quantifier_list '(' . formula ')'

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal          go to state 9
    quantifier       go to state 10
    quantifier_list  go to state 11
    conjunction      go to state 42
    disjunct         go to state 13
    formula          go to state 43


state 31

   20 disjunct: conjunction '|' . disjunct

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal          go to state 9
    quantifier       go to state 10
    quantifier_list  go to state 22
    conjunction      go to state 12
    disjunct         go to state 44


state 32

    4 line: formula '\n' .

    $default  reduce using rule 4 (line)


state 33

    5 literal: VARIABLE '-' '>' . VARIABLE

    VARIABLE  shift, and go to state 45


state 34

    6 literal: VARIABLE '=' '=' . VARIABLE

    VARIABLE  shift, and go to state 46


state 35

    7 literal: VARIABLE '!' '=' . VARIABLE

    VARIABLE  shift, and go to state 47


state 36

    8 literal: '~' . literal

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 36
    '('       shift, and go to state 18

    literal  go to state 19


state 37

    9 literal: '(' literal . ')'

    ')'  shift, and go to state 38


state 38

    9 literal: '(' literal ')' .

    $default  reduce using rule 9 (literal)


state 39

   18 conjunction: quantifier_list '(' . conjunction ')'

    VARIABLE  shift, and go to state 1
    '~'       shift, and go to state 3
    '('       shift, and go to state 4
    'A'       shift, and go to state 5
    'E'       shift, and go to state 6

    literal          go to state 9
    quantifier       go to state 10
    quantifier_list  go to state 22
    conjunction      go to state 48


state 40

   17 conjunction: '(' conjunction ')' .

    $default  reduce using rule 17 (conjunction)


state 41

   16 conjunction: literal '&' conjunction .

    $default  reduce using rule 16 (conjunction)


state 42

   18 conjunction: quantifier_list '(' conjunction . ')'
   19 disjunct: conjunction .
   20         | conjunction . '|' disjunct

    ')'  shift, and go to state 49
    '|'  shift, and go to state 31

    ')'  [reduce using rule 19 (disjunct)]


state 43

   22 formula: quantifier_list '(' formula . ')'

    ')'  shift, and go to state 50


state 44

   20 disjunct: conjunction '|' disjunct .

    $default  reduce using rule 20 (disjunct)


state 45

    5 literal: VARIABLE '-' '>' VARIABLE .

    $default  reduce using rule 5 (literal)


state 46

    6 literal: VARIABLE '=' '=' VARIABLE .

    $default  reduce using rule 6 (literal)


state 47

    7 literal: VARIABLE '!' '=' VARIABLE .

    $default  reduce using rule 7 (literal)


state 48

   18 conjunction: quantifier_list '(' conjunction . ')'

    ')'  shift, and go to state 49


state 49

   18 conjunction: quantifier_list '(' conjunction ')' .

    $default  reduce using rule 18 (conjunction)


state 50

   22 formula: quantifier_list '(' formula ')' .

    $default  reduce using rule 22 (formula)
